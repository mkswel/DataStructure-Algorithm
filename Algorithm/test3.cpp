#include<iostream>
using namespace std;
const int N = 5;
typedef struct{
    int n = N;
    int g[N][N]={
    {0, 1, 0, 1, 0},
    {0, 0, 1, 1, 0},
    {0, 0, 0, 0, 1},
    {0, 0, 1, 0, 1},
    {0, 0, 0, 0, 0},
};
/*
{   王道P223的图
    {0, 1, 0, 1, 0},
    {0, 0, 1, 1, 0},
    {0, 0, 0, 0, 1},
    {0, 0, 1, 0, 1},
    {0, 0, 0, 0, 0},
};
{
    {0, 1, 1, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
    {0, 0, 0, 1, 0, 0, 1, 0, 0, 0},
    {0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
    {0, 0, 1, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 1, 0, 0, 0},
    {0, 0, 0, 0, 0, 1, 0, 1, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
    {1, 0, 0, 0, 0, 0, 0, 0, 0, 0}
};
{
    {0, 1, 1, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 1, 0, 0, 1, 0, 0, 0, 0},
    {0, 0, 0, 1, 0, 0, 1, 0, 0, 0},
    {0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 1, 1, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 1, 1, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
};
*/
}Graph;
bool st[N];
/**
 * 判断图里是否有环，有环返回0，无环返回1
*/
bool dfs(Graph &G, int v, int r){
    bool k = true;
    for(int i = 0; i < G.n; i++){
        if(G.g[v][i]){
            if(!st[i]){
                st[i] = true;
                k = dfs(G, i, v);
                st[i] = false;//状态恢复：不能让之前的线路影响现在的线路
            }
            else if(i != r)k = false;//这里有问题，要排除上一个点
        }
    }
    return k;
}
int main(){
    Graph G;
    st[0] =true;
    cout<<dfs(G,0,0)<<endl;
    return 0;
}
